package com.dianrong.common.uniauth.server.data.mapper;

import com.codahale.metrics.annotation.Timed;
import com.dianrong.common.uniauth.server.data.entity.Grp;
import com.dianrong.common.uniauth.server.data.entity.GrpExample;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.dianrong.common.uniauth.server.support.audit.MapperAudit;
import com.dianrong.common.uniauth.server.support.audit.NoneMapperAudit;
import io.swagger.models.auth.In;
import org.apache.ibatis.annotations.Param;

@MapperAudit
public interface GrpMapper {

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  @Timed
  int countByExample(GrpExample example);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  int deleteByExample(GrpExample example);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  int deleteByPrimaryKey(Integer id);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  int insert(Grp record);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  int insertSelective(Grp record);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  @Timed
  List<Grp> selectByExample(GrpExample example);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  @Timed
  Grp selectByPrimaryKey(Integer id);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  int updateByExampleSelective(@Param("record") Grp record, @Param("example") GrpExample example);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  int updateByExample(@Param("record") Grp record, @Param("example") GrpExample example);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  int updateByPrimaryKeySelective(Grp record);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * grp
   *
   * @mbggenerated Tue Jan 26 11:13:56 CST 2016
   */
  int updateByPrimaryKey(Grp record);

  @NoneMapperAudit
  List<Grp> getGroupTree(Integer groupId);

  @NoneMapperAudit
  List<HashMap<String, Integer>> getGroupTreeLinks(Integer groupId);

  @NoneMapperAudit
  Integer selectNameCountBySameLayerGrpId(Integer groupId);

  @NoneMapperAudit
  Integer checkOwner(Map<String, Object> paramMap);

  @NoneMapperAudit
  Set<Integer> getOwnGrpIds(Long ownerId);

  @NoneMapperAudit
  Integer getUserIdInGroupOrSub(Map<String, Object> paramMap);

  @NoneMapperAudit
  @Timed
  List<Grp> listGroupsRelateToUser(Map<String, Object> paramMap);

  @NoneMapperAudit
  List<Grp> queryPageGroup(Map<String, Object> paramMap);

  @NoneMapperAudit
  List<HashMap<String, Integer>> queryPageGroupTreeLinks(Map<String, Object> paramMap);

  @NoneMapperAudit
  Integer queryPageGroupCount(@Param("grpId") Integer grpId);

  @NoneMapperAudit
  Integer querySubGrpNum(@Param("grpCode")String grpCode, @Param("grpId") Integer grpId, @Param("tenancyId") Long tenancyId);

  @NoneMapperAudit
  List<Integer> querySubGrpIds(@Param("rootCode")String rootCode, @Param("tenancyId") Long tenancyId);
}
